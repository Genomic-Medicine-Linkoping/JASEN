#!/usr/bin/env nextflow
// Select multiple profiles by using -profile local, singularity

params {
  assets =  "${baseDir}/assets"
  
  kraken_db_download = true
  krakendb = "${params.assets}/references/minikraken2/"
  krakendb_url="ftp://ftp.ccb.jhu.edu/pub/data/kraken2_dbs/16S_Silva138_20200326.tgz"
  bwa = "${params.assets}/references/bwa"
  
  local_ariba_db_dir = "${baseDir}/assets/var-genes-ro"
  ariba_db_download = true
  aribadb = "${params.assets}/references/ariba"
  aribadb_local = "${params.assets}/references/ariba_local"
  aribadb_nonc = "${params.assets}/references/ariba_non-coding"
  resfinder_phenotypes = "https://bitbucket.org/genomicepidemiology/resfinder_db/raw/f26963481ec582d09889cf808d5680bc5adec4cc/phenotypes.txt"
  ariba_pubmlst_name = "" // Set default value and overwrite in the profiles
  ariba_pubmlst_db = "${params.assets}/references/ariba_mlst"

  chewbbacadb = "${params.assets}/references/chewbbaca/"
  chewbbacadb_url = "" // Set default value and overwrite in the profiles
  // Required for SPA-typing (Staphylococcus aureus)
  spa_db = "${params.assets}/spa-typing"

  // AMRFinderPlus
  aMRFinderPlus_organism = false
  aMRFinderPlus_org_name = ""
  aMRFinderPlusDb = "${params.assets}/references/aMRFinderPlusDb"

  // Singularity images
  main_image = "library://ljmesi/jasen/main.sif"
  reporting_image = "library://ljmesi/jasen/reporting.sif"

  // Reporting
  report_template_file = "${baseDir}/exp/create_output_doc/Test_output.Rmd"
  bibliography = "${baseDir}/exp/create_output_doc/bibliography.bib"
  reference_style = "${baseDir}/exp/create_output_doc/pnas.csl"

  // Adapters
  adapter_fname = "qiaseq_adapters.fa"
  adapters = "${baseDir}/assets/adapters/${adapter_fname}"
}

profiles {
  Escherichia_coli{
    params.species = "Escherichia_coli"
    params.genome_name = "Escherichia_coli_GCF_000008865.2_ASM886v2"
    params.sample_ID = "Escherichia_coli_EC3693"
    params.spa_exist = false
    params.chewbbaca_db_download = true
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/5064703/alleles/"
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Escherichia coli#1"
    params.aMRFinderPlus_organism = true
    params.aMRFinderPlus_org_name = "Escherichia"
  }
  Staphylococcus_aureus{
    params.species = "Staphylococcus_aureus"
    params.genome_name = "Staphylococcus_aureus_GCF_000013425.1_ASM1342v1"
    params.spa_exist = true
    params.sample_ID = "Staphylococcus_aureus_HY161669"
    params.chewbbaca_db_download = true
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/141106/alleles/"
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Staphylococcus aureus"
    params.aMRFinderPlus_organism = true
    params.aMRFinderPlus_org_name = "Staphylococcus_aureus"
  }
  Klebsiella_pneumoniae{
    params.species = "Klebsiella_pneumoniae"
    params.genome_name = "Klebsiella_pneumoniae_GCF_000240185.1_ASM24018v2"
    params.sample_ID = "Klebsiella_pneumoniae_AB164094"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/2187931/alleles/"
    params.chewbbaca_db_download = true
    params.spa_exist = false
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Klebsiella pneumoniae"
    params.aMRFinderPlus_organism = true
    params.aMRFinderPlus_org_name = "Klebsiella"
  }
  Mycobacterium_tuberculosis{
    params.species = "Mycobacterium_tuberculosis"
    params.genome_name = "Mycobacterium_tuberculosis_GCF_000195955.2_ASM19595v2"
    params.sample_ID = "Mycobacterium_tuberculosis_prov1"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/741110/alleles/"
    params.chewbbaca_db_download = true
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Acinetobacter_baumannii{
    params.species = "Acinetobacter_baumannii"
    params.genome_name = "Acinetobacter_baumannii_GCF_002116925.1_ASM211692v1"
    params.sample_ID = "Acinetobacter_baumannii_MR130386-1"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/3956907/alleles/"
    params.chewbbaca_db_download = true
    params.spa_exist = false
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Acinetobacter baumannii#2"
    params.aMRFinderPlus_organism = true
    params.aMRFinderPlus_org_name = "Acinetobacter_baumannii"
  }
  Enterococcus_faecalis{
    params.species = "Enterococcus_faecalis"
    params.genome_name = "Enterococcus_faecalis_GCF_003319815.1_ASM331981v1"
    params.sample_ID = "Enterococcus_faecalis"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/3887469/alleles/"
    params.chewbbaca_db_download = true
    params.spa_exist = false
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Enterococcus faecalis"
    params.aMRFinderPlus_organism = true
    params.aMRFinderPlus_org_name = "Enterococcus_faecalis"
  }
  Enterococcus_faecium{
    params.species = "Enterococcus_faecium"
    params.genome_name = "Enterococcus_faecium_GCF_000336405.1_ASM33640v1"
    params.sample_ID = "Enterococcus_faecium_VR170213"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/991893/alleles/"
    params.chewbbaca_db_download = true
    params.spa_exist = false
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Enterococcus faecium"
    params.aMRFinderPlus_organism = true
    params.aMRFinderPlus_org_name = "Enterococcus_faecium"
  }
  Pseudomonas_aeruginosa{
    params.species = "Pseudomonas_aeruginosa"
    params.genome_name = "Pseudomonas_aeruginosa_GCF_000006765.1_ASM676v1"
    params.sample_ID = "Pseudomonas_aeruginosa_MRR160068"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/16115339/alleles/"
    params.chewbbaca_db_download = true
    params.spa_exist = false
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Pseudomonas aeruginosa"
  }
  Clostridioides_difficile{
    params.species = "Clostridioides_difficile"
    params.genome_name = "Clostridioides_difficile_GCF_002007885.1_ASM200788v1"
    params.sample_ID = "Clostridioides_difficile_CDO160115"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/12556067/alleles/"
    params.chewbbaca_db_download = true
    params.spa_exist = false
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Clostridioides difficile"
  }
  Mycobacterium_africanum{
    params.species = "Mycobacterium_africanum"
    params.genome_name = "Mycobacterium_africanum_GCF_000253355.1_ASM25335v1"
    params.sample_ID = "Mycobacterium_africanum"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/741110/alleles/"
    params.chewbbaca_db_download = true
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacterium_bovis{
    params.species = "Mycobacterium_bovis"
    params.genome_name = "Mycobacterium_bovis_GCF_005156105.1_ASM515610v1"
    params.sample_ID = "Mycobacterium_bovis"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/741110/alleles/"
    params.chewbbaca_db_download = true
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Salmonella_enterica{
    params.species = "Salmonella_enterica"
    params.genome_name = "Salmonella_enterica_GCF_000006945.2_ASM694v2"
    params.sample_ID = "Salmonella_enterica"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/4792159/alleles/"
    params.chewbbaca_db_download = true
    params.spa_exist = false
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Salmonella enterica"
    params.aMRFinderPlus_organism = true
    params.aMRFinderPlus_org_name = "Salmonella"
  }
  Enterobacter_cloacae{
    params.species = "Enterobacter_cloacae"
    params.genome_name = "Enterobacter_cloacae_GCF_000770155.1_ASM77015v1"
    params.sample_ID = "Enterobacter_cloacae_MRR160069"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Enterobacter cloacae"
  }
  Proteus_mirabilis{
    params.species = "Proteus_mirabilis"
    params.genome_name = "Proteus_mirabilis_GCF_000069965.1_ASM6996v1"
    params.sample_ID = "Proteus_mirabilis_MRR160074"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Proteus_vulgaris{
    params.species = "Proteus_vulgaris"
    params.genome_name = "Proteus_vulgaris_GCF_000754995.1_PVA"
    params.sample_ID = "Proteus_vulgaris_MRR160070"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacterium_gordonae{
    params.species = "Mycobacterium_gordonae"
    params.genome_name = "Mycobacterium_gordonae_GCF_002101675.1_ASM210167v1"
    params.sample_ID = "Mycobacterium_gordonae"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  // Is this the same thing as Mycobacterium abscessus, if so params.ariba_mlst = true
  Mycobacteroides_abscessus{
    params.species = "Mycobacterium_abcessus"
    params.genome_name = "Mycobacteroides_abscessus_GCF_001606295.1_ASM160629v1"
    params.sample_ID = "Mycobacterium_abcessus"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacterium_avium{
    params.species = "Mycobacterium_avium"
    params.genome_name = "Mycobacterium_avium_GCF_001865635.4_ASM186563v4"
    params.sample_ID = "Mycobacterium_avium"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacterium_intracellulare{
    params.species = "Mycobacterium_intracellulare"
    params.genome_name = "Mycobacterium_intracellulare_GCF_000277125.1_ASM27712v1"
    params.sample_ID = "Mycobacterium_intracellulare"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacterium_malmoense{
    params.species = "Mycobacterium_malmoense"
    params.genome_name = "Mycobacterium_malmoense_GCF_002086305.1_ASM208630v1"
    params.sample_ID = "Mycobacterium_malmoense"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Staphylococcus_argenteus{
    params.species = "Staphylococcus_argenteus"
    params.genome_name = "Staphylococcus_argenteus_GCF_001891145.1_ASM189114v1"
    params.sample_ID = "Staphylococcus_argenteus"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Staphylococcus_saprophyticus{
    params.species = "Staphylococcus_saprophyticus"
    params.genome_name = "Staphylococcus_saprophyticus_GCF_900635295.1_40853_E01"
    params.sample_ID = "Staphylococcus_saprophyticus"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Stenotrophomonas_maltophilia{
    params.species = "Stenotrophomonas_maltophilia"
    params.genome_name = "Stenotrophomonas_maltophilia_GCF_900475405.1_44087_C01"
    params.sample_ID = "Stenotrophomonas_maltophilia"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Stenotrophomonas maltophilia"
  }
  Streptococcus_pyogenes{
    params.species = "Streptococcus_pyogenes"
    params.genome_name = "Streptococcus_pyogenes_GCF_001267845.1_ASM126784v1"
    params.sample_ID = "Streptococcus_pyogenes"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Streptococcus pyogenes"
    params.aMRFinderPlus_organism = true
    params.aMRFinderPlus_org_name = "Streptococcus_pyogenes"
  }
  Citrobacter_braakii{
    params.species = "Citrobacter_braakii"
    params.genome_name = "Citrobacter_braakii_GCF_004331635.1_ASM433163v1"
    params.sample_ID = "Citrobacter_braakii"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Corynebacterium_striatum{
    params.species = "Corynebacterium_striatum"
    params.genome_name = "Corynebacterium_striatum_GCF_004138065.1_ASM413806v1"
    params.sample_ID = "Corynebacterium_striatum"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Enterococcus_gallinarum{
    params.species = "Enterococcus_gallinarum"
    params.genome_name = "Enterococcus_gallinarum_GCF_017641965.1_ASM1764196v1"
    params.sample_ID = "Enterococcus_gallinarum"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Klebsiella_aerogenes{
    params.species = "Klebsiella_aerogenes"
    params.genome_name = "Klebsiella_aerogenes_GCF_900637945.1_53421_E01"
    params.sample_ID = "Klebsiella_aerogenes"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = true
    params.ariba_pubmlst_name = "Klebsiella aerogenes"
    params.aMRFinderPlus_organism = true
    params.aMRFinderPlus_org_name = "Klebsiella"
  }
  Mycobacterium_chimera{
    params.species = "Mycobacterium_chimera"
    params.genome_name = "Mycobacterium_chimera_GCF_002219285.1_ASM221928v1"
    params.sample_ID = "Mycobacterium_chimera"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacterium_malmoense{
    params.species = "Mycobacterium_malmoense"
    params.genome_name = "Mycobacterium_malmoense_GCF_002086305.1_ASM208630v1"
    params.sample_ID = "Mycobacterium_malmoense"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacterium_kansasii{
    params.species = "Mycobacterium_kansasii"
    params.genome_name = "Mycobacterium_kansasii_GCF_000157895.3_ASM15789v2"
    params.sample_ID = "Mycobacterium_kansasii"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacteroides_chelonae{
    params.species = "Mycobacterium_chelonae"
    params.genome_name = "Mycobacteroides_chelonae_GCF_001632805.1_ASM163280v1"
    params.sample_ID = "Mycobacterium_chelonae"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacterium_celatum{
    params.species = "Mycobacterium_celatum"
    params.genome_name = "Mycobacterium_celatum_GCF_001632805.1_ASM163280v1"
    params.sample_ID = "Mycobacterium_celatum"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacterium_marinum{
    params.species = "Mycobacterium_marinum"
    params.genome_name = "Mycobacterium_marinum_GCF_016745295.1_ASM1674529v1"
    params.sample_ID = "Mycobacterium_marinum"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacterium_szulgai{
    params.species = "Mycobacterium_szulgai"
    params.genome_name = "Mycobacterium_szulgai_GCF_002116635.1_ASM211663v1"
    params.sample_ID = "Mycobacterium_szulgai"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacterium_scrofulaceum{
    params.species = "Mycobacterium_scrofulaceum"
    params.genome_name = "Mycobacterium_scrofulaceum_GCF_002086735.1_ASM208673v1"
    params.sample_ID = "Mycobacterium_scrofulaceum"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  Mycobacterium_xenopi{
    params.species = "Mycobacterium_xenopi"
    params.genome_name = "Mycobacterium_xenopi_GCF_900453395.1_53750_B01"
    params.sample_ID = "Mycobacterium_xenopi"
    params.chewbbaca_db_download = false
    params.spa_exist = false
    params.ariba_mlst = false
  }
  local {
    params.location='local'
    process.executor='local'
  }
  slurm {
    params.location='slurm'
    process.executor='slurm'
    process.queue='high'
  }
  singularity {
    params.pkm = 'singularity'
    singularity.cacheDir = "${baseDir}/.singularity"
    singularity.enabled = true
    singularity.autoMounts = true
    process{
      withName:bwa_index_reference {
        container="${params.main_image}"
      }
      withName:cgmlst_db_init {
        container="${params.main_image}"
      }
      withName:kraken2_db_download {
        container="${params.main_image}"
      }
      withName:ariba_db_download {
        container="${params.main_image}"
      }
      withName:ariba_prepare_localdb {
        container="${params.main_image}"
      }
      withName:fastqc_readqc {
        container="${params.main_image}"
      }
      withName:lane_concatination {
        container="${params.main_image}"
      }
      withName:trimmomatic_trimming {
        container="${params.main_image}"
      }
      withName:ariba_resistancefind {
        container="${params.main_image}"
      }
      withName:ariba_resistancefind_local {
        container="${params.main_image}"
      }
      withName:ariba_resistancefind_nonc {
        container="${params.main_image}"
      }
      withName:ariba_stats {
        container="${params.main_image}"
      }
      withName:kraken2_decontamination {
        container="${params.main_image}"
      }
      withName:spades_assembly {
        container="${params.main_image}"
      }
      withName:mlst_lookup {
        container="${params.main_image}"
      }
      withName:chewbbaca_cgmlst {
        container="${params.main_image}"
      }
      withName:quast_assembly_qc {
        container="${params.main_image}"
      }
      withName:quast_json_conversion {
        container="${params.main_image}"
      }
      withName:bwa_read_mapping {
        container="${params.main_image}"
      }
      withName:samtools_duplicates_stats {
        container="${params.main_image}"
      }
      withName:picard_markduplicates {
        container="${params.main_image}"
      }
      withName:samtools_calling {
        container="${params.main_image}"
      }
      withName:vcftools_snpcalling {
        container="${params.main_image}"
      }
      withName:snp_translation {
        container="${params.main_image}"
      }
      withName:picard_qcstats {
        container="${params.main_image}"
      }
      withName:samtools_deduplicated_stats {
        container="${params.main_image}"
      }
      withName:multiqc_report {
        container="${params.main_image}"
      }
      withName:spa_gene_extraction  {
        container="${params.main_image}"
      }
      withName:aMRFinderPlus  {
        container="${params.main_image}"
      }
      withName:build_report {
        container="${params.reporting_image}"
      }
    }
  }
}

params {
  reference = "${params.assets}/ref_genomes/${params.genome_name}.fna"
  outdir = "${baseDir}/results/${params.sample_ID}"
  input = "${baseDir}/assets/sequencing_data/${params.sample_ID}"
  prodigal_file = "${params.genome_name}.trn"
  prodigal_filepath = "${baseDir}/assets/prodigal_training_files/${params.prodigal_file}"
}

process {
  withLable: min_allocation {
    cpus = 20
    memory = '100.GB'
    time = '15m'
  }
  withLabel: modest_allocation {
    cpus = 50
    memory = '200.GB'
    time = '1h'
  }
  withLabel: max_allocation {
    cpus = 66
    memory = '450.GB'
    time = '2h'
  }
}


manifest {
  name = 'https://github.com/Genomic-Medicine-Linkoping/JASEN/'
  author = 'Isak Sylvin et al. and Lauri Mesilaakso (ro-implementation branch)'
  homePage = 'https://github.com/Genomic-Medicine-Linkoping/JASEN/tree/ro-implementation'
  description = 'Json producing Assembly driven microbial Sequence analysis pipeline to support Epitypification and Normalize classification decisions'
  mainScript = 'main.nf'
  nextflowVersion = '21.04.0'
  version = '0.2.0'
}
