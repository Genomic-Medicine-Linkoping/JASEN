#!/usr/bin/env nextflow
// Select multiple profiles by using -profile local, singularity

params {
  krakendb_url="ftp://ftp.ccb.jhu.edu/pub/data/kraken2_dbs/16S_Silva138_20200326.tgz"
  
  local_ariba_db_dir = "${baseDir}/assets/var-genes-ro"
  ariba_db_download = true
  kraken_db_download = true
  chewbbaca_db_download = true
  spa_primers = "${baseDir}/assets/spa-typing_primers"
  
  // Reporting
  report_template_file = "${baseDir}/exp/create_output_doc/Test_output.Rmd"
  bibliography = "${baseDir}/exp/create_output_doc/bibliography.bib"
  reference_style = "${baseDir}/exp/create_output_doc/pnas.csl"

  resfinder_phenotypes = "https://bitbucket.org/genomicepidemiology/resfinder_db/raw/f26963481ec582d09889cf808d5680bc5adec4cc/phenotypes.txt"
  adapters = "${baseDir}/assets/adapters/qiaseq_adapters.fa"
}

profiles {
  Escherichia_coli{
    params.species = "Escherichia_coli"
    params.genome_name = "Escherichia_coli_GCF_000008865.2_ASM886v2"
    params.input_dir = "Escherichia_coli_p1"
    params.sample_ID = "Escherichia_coli_prov1"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/5064703/alleles/"
  }
  Staphylococcus_aureus{
    params.species = "Staphylococcus_aureus"
    params.genome_name = "Staphylococcus_aureus_GCF_000013425.1_ASM1342v1"
    params.input_dir = "saureus_p1"
    params.spa_exist = true
		params.sample_ID = "Staphylococcus_aureus_prov1"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/141106/alleles/"
  }
  Klebsiella_pneumoniae{
    params.species = "Klebsiella_pneumoniae"
    params.genome_name = "Klebsiella_pneumoniae_GCF_000240185.1_ASM24018v2"
    params.input_dir = "Klebsiella_pneumoniae_p1"
		params.sample_ID = "Klebsiella_pneumoniae_prov1"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/2187931/alleles/"
  }
  Mycobacterium_tuberculosis{
    params.species = "Mycobacterium_tuberculosis"
    params.genome_name = "Mycobacterium_tuberculosis_GCF_000195955.2_ASM19595v2"
    params.input_dir = "Mycobacterium_tuberculosis_p1"
		params.sample_ID = "Mycobacterium_tuberculosis_prov1"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/741110/alleles/"
  }
  Acinetobacter_baumannii{
    params.species = "Acinetobacter_baumannii"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Acinetobacter_baumannii"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/3956907/alleles/"
  }
  Enterococcus_faecalis{
    params.species = "Enterococcus_faecalis"
    params.genome_name = ""
    params.input_dir = "Enterococcus_faecalis"
		params.sample_ID = "Enterococcus_faecalis"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/3887469/alleles/"
  }
  Enterococcus_faecium{
    params.species = "Enterococcus_faecium"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Enterococcus_faecium"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/991893/alleles/"
  }
  Pseudomonas_aeruginosa{
    params.species = "Pseudomonas_aeruginosa"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Pseudomonas_aeruginosa"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/16115339/alleles/"
  }
  Clostridioides_difficile{
    params.species = "Clostridioides_difficile"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Clostridioides_difficile"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/12556067/alleles/"
  }
  Mycobacterium_africanum{
    params.species = "Mycobacterium_africanum"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_africanum"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/741110/alleles/"
  }
  Mycobacterium_bovis{
    params.species = "Mycobacterium_bovis"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_bovis"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/741110/alleles/"
  }
  Salmonella_enterica{
    params.species = "Salmonella_enterica"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Salmonella_enterica"
    params.chewbbacadb_url = "https://www.cgmlst.org/ncs/schema/4792159/alleles/"
  }
  Mycobacterium_gordonae{
    params.species = "Mycobacterium_gordonae"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_gordonae"
    params.chewbbacadb_url = ""
  }
  Enterobacter_cloacae{
    params.species = "Enterobacter_cloacae"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Enterobacter_cloacae"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_abcessus{
    params.species = "Mycobacterium_abcessus"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_abcessus"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_avium{
    params.species = "Mycobacterium_avium"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_avium"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_intracellulare{
    params.species = "Mycobacterium_intracellulare"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_intracellulare"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_malmoense{
    params.species = "Mycobacterium_malmoense"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_malmoense"
    params.chewbbacadb_url = ""
  }
  Staphylococcus_argenteus{
    params.species = "Staphylococcus_argenteus"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Staphylococcus_argenteus"
    params.chewbbacadb_url = ""
  }
  Stenotrophomonas_maltophilia{
    params.species = "Stenotrophomonas_maltophilia"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Stenotrophomonas_maltophilia"
    params.chewbbacadb_url = ""
  }
  Streptococcus_pyogenes{
    params.species = "Streptococcus_pyogenes"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Streptococcus_pyogenes"
    params.chewbbacadb_url = ""
  }
  Citrobacter_braakii{
    params.species = "Citrobacter_braakii"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Citrobacter_braakii"
    params.chewbbacadb_url = ""
  }
  Corynebacterium_striatum{
    params.species = "Corynebacterium_striatum"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Corynebacterium_striatum"
    params.chewbbacadb_url = ""
  }
  Enterococcus_gallinarum{
    params.species = "Enterococcus_gallinarum"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Enterococcus_gallinarum"
    params.chewbbacadb_url = ""
  }
  Klebsiella_aerogenes{
    params.species = "Klebsiella_aerogenes"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Klebsiella_aerogenes"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_chimera{
    params.species = "Mycobacterium_chimera"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_chimera"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_malmoense{
    params.species = "Mycobacterium_malmoense"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_malmoense"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_kansasii{
    params.species = "Mycobacterium_kansasii"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_kansasii"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_chelonae{
    params.species = "Mycobacterium_chelonae"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_chelonae"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_celatum{
    params.species = "Mycobacterium_celatum"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_celatum"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_marinum{
    params.species = "Mycobacterium_marinum"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_marinum"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_szulgai{
    params.species = "Mycobacterium_szulgai"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_szulgai"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_scrofulaceum{
    params.species = "Mycobacterium_scrofulaceum"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_scrofulaceum"
    params.chewbbacadb_url = ""
  }
  Mycobacterium_xenopi{
    params.species = "Mycobacterium_xenopi"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Mycobacterium_xenopi"
    params.chewbbacadb_url = ""
  }
  Proteus_mirabilis{
    params.species = "Proteus_mirabilis"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Proteus_mirabilis"
    params.chewbbacadb_url = ""
  }
  Proteus_vulgaris{
    params.species = "Proteus_vulgaris"
    params.genome_name = ""
    params.input_dir = ""
		params.sample_ID = "Proteus_vulgaris"
    params.chewbbacadb_url = ""
  }
  local {
    params.location='local'
    process.executor='local'
  }
  slurm {
    params.location='slurm'
    process.executor='slurm'
    process.queue='high'
  }
  conda {
    params.pkm = 'conda'

    params.rootdir = '/tmp/jasen/'
    params.outdir = "${params.rootdir}/results/"
    params.assets = "${params.rootdir}/assets/"
    params.reference = "${params.assets}/ref_genomes/${params.genome_name}.fna"
    params.krakendb="${params.assets}/references/minikraken2/"
    params.aribadb="${params.assets}/references/ariba/"
    params.chewbbacadb="${params.assets}/references/chewbbaca/"
  }
  singularity {
    params.pkm = 'singularity'

    params.outdir = "${baseDir}/results/${params.sample_ID}"
    params.assets =  "${baseDir}/assets/"
    params.reference = "${params.assets}ref_genomes/${params.genome_name}.fna"
    params.bwa = "${params.assets}references/bwa"
    params.krakendb = "${params.assets}references/minikraken2/"
    params.aribadb = "${params.assets}references/ariba"
    params.aribadb_local = "${params.assets}references/ariba_local"
    params.aribadb_nonc = "${params.assets}references/ariba_non-coding"
    params.chewbbacadb = "${params.assets}references/chewbbaca/"

    singularity.enabled = true
    singularity.autoMounts = true
  }
}

params {
  input = "${baseDir}/assets/sequencing_data/${params.input_dir}"
// input = "${baseDir}/assets/sequencing_data/Escherichia_coli_p1"
// input = "${baseDir}/assets/test_data/sequencing_data/ecoli_1k"
  prodigal_file = "${baseDir}/assets/prodigal_training_files/${params.genome_name}.trn"
}

process {
  withLable: min_allocation {
    cpus = 20
    memory = '100.GB'
    time = '15m'
  }
  withLabel: modest_allocation {
    cpus = 50
    memory = '200.GB'
    time = '1h'
  }
  withLabel: max_allocation {
    cpus = 66
    memory = '450.GB'
    time = '2h'
  }
}

manifest {
  name = 'genomic-medicine-sweden/JASEN'
  author = 'Isak Sylvin et al.'
  homePage = 'https://github.com/genomic-medicine-sweden/JASEN.git'
  description = 'Json producing Assembly driven microbial Sequence analysis pipeline to support Epitypification and Normalize classification decisions'
  mainScript = 'main.nf'
  nextflowVersion = '>=10.0.0'
  version = '0.1.0'
}
